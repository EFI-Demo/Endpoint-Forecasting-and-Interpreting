
		There’s a saying that many people have heard, “If it was snake, it would have bitten you.” More often than not, that’s the case with software vulnerabilities. A security class bug can often be so subtle in a program that human reviews, static code analysis and other sophisticated tools might not find it. Yet at the same time, finding that vulnerability can be critical, especially if it is exploitable.
During the next several weeks, in our ‘Vuln Hunt: Find the Security Vulnerability Challenge,’ we’ll share a few light-hearted examples from our Microsoft security experts that illustrate how subtle security vulnerabilities can be. Some of the examples they will share, can make even the savviest of us take a second look. Let’s see how well you do in with our first challenge that takes a look at authenticated encryption.
If you haven’t already, I also encourage you to check out another great security story “Life in Digital Crosshairs; the dawn of the Microsoft Security Development Lifecycle.” This story is about the industry-leading Security Development Lifecycle (SDL) which has been helping public and private organizations for the past 10 years, change their engineering cultures and develop more secure software, and help find where the vulnerabilities may be.
Enjoy the challenge!
	